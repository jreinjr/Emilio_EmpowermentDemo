//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.12
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace TBE {

public class NativeEventListener : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal NativeEventListener(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(NativeEventListener obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~NativeEventListener() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          Audio360CSharpPINVOKE.delete_NativeEventListener(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  protected virtual void onNewEvent(Event arg0) {
    Audio360CSharpPINVOKE.NativeEventListener_onNewEvent__SWIG_0(swigCPtr, (int)arg0);
  }

  protected virtual void onNewEvent(Event arg0, NativeAudioObject owner) {
    Audio360CSharpPINVOKE.NativeEventListener_onNewEvent__SWIG_1(swigCPtr, (int)arg0, NativeAudioObject.getCPtr(owner));
  }

  public NativeEventListener() : this(Audio360CSharpPINVOKE.new_NativeEventListener(), true) {
    SwigDirectorConnect();
  }

  private void SwigDirectorConnect() {
    if (SwigDerivedClassHasMethod("onNewEvent", swigMethodTypes0))
      swigDelegate0 = new SwigDelegateNativeEventListener_0(SwigDirectoronNewEvent__SWIG_0);
    if (SwigDerivedClassHasMethod("onNewEvent", swigMethodTypes1))
      swigDelegate1 = new SwigDelegateNativeEventListener_1(SwigDirectoronNewEvent__SWIG_1);
    Audio360CSharpPINVOKE.NativeEventListener_director_connect(swigCPtr, swigDelegate0, swigDelegate1);
  }

  private bool SwigDerivedClassHasMethod(string methodName, global::System.Type[] methodTypes) {
    global::System.Reflection.MethodInfo methodInfo = this.GetType().GetMethod(methodName, global::System.Reflection.BindingFlags.Public | global::System.Reflection.BindingFlags.NonPublic | global::System.Reflection.BindingFlags.Instance, null, methodTypes, null);
    bool hasDerivedMethod = methodInfo.DeclaringType.IsSubclassOf(typeof(NativeEventListener));
    return hasDerivedMethod;
  }

  private void SwigDirectoronNewEvent__SWIG_0(int arg0) {
    onNewEvent((Event)arg0);
  }

  private void SwigDirectoronNewEvent__SWIG_1(int arg0, global::System.IntPtr owner) {
    onNewEvent((Event)arg0, (owner == global::System.IntPtr.Zero) ? null : new NativeAudioObject(owner, false));
  }

  public delegate void SwigDelegateNativeEventListener_0(int arg0);
  public delegate void SwigDelegateNativeEventListener_1(int arg0, global::System.IntPtr owner);

  private SwigDelegateNativeEventListener_0 swigDelegate0;
  private SwigDelegateNativeEventListener_1 swigDelegate1;

  private static global::System.Type[] swigMethodTypes0 = new global::System.Type[] { typeof(Event) };
  private static global::System.Type[] swigMethodTypes1 = new global::System.Type[] { typeof(Event), typeof(NativeAudioObject) };
}

}
